# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p9okdqWo35Ok8lB1xeMyh2l3VfLmMqb_
"""

import streamlit as st
import random

# Welcome function
def welcome_message():
    st.write("## Welcome to the Throat Inflammation Diagnosis App!")
    st.write("Upload a photo or enter data to get a diagnosis.")

# Function simulating a diagnosis
def simulate_diagnosis():
    diagnosis = random.choice(["Throat inflammation detected", "No throat inflammation detected"])
    return diagnosis

# Main application
def main():
    # Page settings
    st.set_page_config(
        page_title="Throat Inflammation Diagnosis",
        page_icon="ðŸ©º",
        layout="centered",
    )

    # Home page
    welcome_message()

    # File upload section
    st.write("### 1. Upload an image for analysis")
    uploaded_file = st.file_uploader("Upload a throat image (.jpg/.png format)", type=["jpg", "png"])

    # Diagnostic method selection
    st.write("### 2. Choose a diagnostic method")
    diagnosis_method = st.radio(
        "Select an option:",
        ("Automatic simulation", "Enter data manually"),
    )

    if diagnosis_method == "Automatic simulation":
        if uploaded_file is not None:
            # Display the uploaded image
            st.image(uploaded_file, caption="Uploaded image", use_column_width=True)

            # Diagnosis result
            if st.button("Run diagnosis"):
                diagnosis = simulate_diagnosis()
                st.success(f"Diagnosis result: {diagnosis}")
        else:
            st.warning("Please upload an image before running the diagnosis.")

    elif diagnosis_method == "Enter data manually":
        st.write("Enter the data below to proceed with the diagnosis.")

        # Data form
        with st.form(key="user_input_form"):
            age = st.number_input("Patient's age", min_value=0, max_value=120, step=1)
            temperature = st.slider("Body temperature (Â°C)", 35.0, 42.0, 37.0, step=0.1)
            symptoms = st.multiselect(
                "Select symptoms:",
                ["Sore throat", "Fever", "Cough", "Enlarged tonsils", "Hoarseness"],
            )
            submitted = st.form_submit_button("Proceed with diagnosis")

        # Diagnosis result
        if submitted:
            st.write(f"Age: {age} years")
            st.write(f"Temperature: {temperature}Â°C")
            st.write(f"Symptoms: {', '.join(symptoms) if symptoms else 'No symptoms'}")

            diagnosis = simulate_diagnosis()
            st.success(f"Diagnosis result: {diagnosis}")

if __name__ == "__main__":
    main()